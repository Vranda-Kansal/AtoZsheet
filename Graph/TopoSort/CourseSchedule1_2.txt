TopoSort can be many so you can return any one of them
if in question it is given return any or in which order is think about TopoSort using BFS
Or questions related to Directed Graph TopoSort would be one of the algo that should need to come in your mind


class Solution {
public:
    vector<int> findOrder(int n, vector<vector<int>>& courses) {
        vector<int> adj[n];
        vector<int> indegree(n, 0);
        for(auto it: courses){
            adj[it[1]].push_back(it[0]);
            indegree[it[0]]++;
        }
        queue<int> q;
        int cnt = 0;

        for(int i=0; i<n; i++){
            if(indegree[i] == 0){
                q.push(i);
            }
        }
        vector<int> ans;
        while(!q.empty()){
            int node = q.front();
            ans.push_back(node);
            q.pop();
            for(auto it: adj[node]){
                indegree[it]--;
                if(indegree[it] == 0){
                    q.push(it);
                }
            }
        }
         if(ans.size() == n) return ans;
        return {};
    }
};